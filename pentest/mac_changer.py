#!/usr/bin/env python
# 08:00:27:95:8c:5e

import optparse
import subprocess
import re


def get_arguments():
    parser = optparse.OptionParser('usage %prog -i <interface> -m <mac_address>')
    parser.add_option('-i', '--interface', dest='interface', type='string', help='specify interface')
    parser.add_option('-m', '--mac', dest='macAddress', type='string', help='specify MAC address')
    return parser


def parse_arguments(parser):
    (options, _) = parser.parse_args()
    interface = options.interface
    mac_address = options.macAddress

    if (interface == None) | (mac_address == None):
        parser.error('[-] You must specify an interface and MAC address.')
        exit(0)

    return (interface, mac_address)


def change_mac_address(interface, mac_address):
    print("[X] Changing MAC address for interface " + interface + " to " + mac_address)

    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", mac_address])
    subprocess.call(["ifconfig", interface, "up"])

def get_current_mac(interface):
    ifconfig_output = subprocess.check_output(["ifconfig", interface])
    mac_address_result = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", ifconfig_output)

    if mac_address_result:
        return mac_address_result.group(0)
    else:
        print("[-] Could not extract MAC address from interface")

parser = get_arguments()
(interface, desired_mac_address) = parse_arguments(parser)

current_mac = get_current_mac(interface)
print("Current MAC " + str(current_mac))

change_mac_address(interface, desired_mac_address)
current_mac = get_current_mac(interface)

if current_mac == desired_mac_address:
    print("[+] MAC address changed successfully to " + str(current_mac))
else:
    print("[-] Could not change MAC address")
