#!/usr/bin/python
## RSA - Recover and use private key generated w/ small prime numbers - crypto200-poor_rsa @ alexctf 2017
# @author intrd - http://dann.com.br/ (original script here: http://crypto.stackexchange.com/questions/19444/rsa-given-q-p-and-e)
# @license Creative Commons Attribution-ShareAlike 4.0 International License - http://creativecommons.org/licenses/by-sa/4.0/

from Crypto.PublicKey import RSA
import gmpy, base64

pub = RSA.importKey(27567150991786154644344317001280958818824423582124395115747061513983323395603704402834113482487491315528543308869622790746182834110533681415860445431151496230483832390058584964051116122162827709651659304400601171129040546840889381442512721695742382112129200150792661617119439238011903081727999378432903435473100326556350359452837329561194486399230270365065003430174610208791246052616190461239400603640767644556681712977498065613964569296141928434192957740077054791402518825233607483654470168153206820557470553438908343092374857213472213239989537662330721153357378518598426562097644591299559562621840900280285932739943)

n = long(27567150991786154644344317001280958818824423582124395115747061513983323395603704402834113482487491315528543308869622790746182834110533681415860445431151496230483832390058584964051116122162827709651659304400601171129040546840889381442512721695742382112129200150792661617119439238011903081727999378432903435473100326556350359452837329561194486399230270365065003430174610208791246052616190461239400603640767644556681712977498065613964569296141928434192957740077054791402518825233607483654470168153206820557470553438908343092374857213472213239989537662330721153357378518598426562097644591299559562621840900280285932739943)
print "n"
print n
e = long(pub.e)
print "e"
print e

#w/ n, get p and q from factordb.com
p = 863653476616376575308866344984576466644942572246900013156919
print "p"
print p
q = 965445304326998194798282228842484732438457170595999523426901
print "q"
print q

d = long(gmpy.invert(e,(p-1)*(q-1)))
print "d"
print d

key = RSA.construct((n,e,d))

# message = 'myeggs..'

## to sign
# signature = key.sign(message,'')
# sign = pub.verify(message,signature)
# print "signed?"
# print sign

## to encrypt
# secret = pub.encrypt(message,'')
# print secret
#exit()

## to decrypt
secret = base64.b64decode("Ni45iH4UnXSttNuf0Oy80+G5J7tm8sBJuDNN7qfTIdEKJow4siF2cpSbP/qIWDjSi+w=")
#print secret
print key.decrypt(secret)

