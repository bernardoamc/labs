#!/usr/bin/env python

import scapy.all as scapy

def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst='ff:ff:ff:ff:ff:ff')
    arp_request_broadcast = broadcast/arp_request
    answered = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]
    print(answered.show())
    return answered[0][1].hwsrc

def sniff(interface):
    scapy.sniff(iface=interface, store=False, prn=process_sniffed_packet)

# Here we are verifying that an ARP response has the proper IP and associated MAC address
# to avoid ARP spoofing.
def process_sniffed_packet(packet):
    if packet.haslayer(scapy.ARP) and packet[scapy.ARP].op == 2:
        try:
            real_mac = get_mac(packet[scapy.ARP].psrc])
            response_mac = packet[scapy.ARP].hwsrc

            if real_mac != response_mac:
                print("[+] ARP spoofing detected with MAC: " + str(response_mac))
        except IndexError:
            pass

sniff("en0")
